
Algorithms

Algorithms have guidelines.

1st is a clear problem statement.
(Make sure that the problem is clearly stated in the instrucitons)

2nd  Must contain specific set of instructions in a particular order
(Have to clear on how to go about using the algorithm)

3rd  Each step should be clear. 
(Each step should not be debateable, It should not be able to be broken
into more steps )

4th Should produce result

5th should complete without using an infinite amout of time. 
(If the program takes forever to give a result we may never know the result)

consistent results


Efficiency -  Can be measured by time and space
(Time Complecity- measure of how long it takes the algorithm to run
Space Complecity-  Amount of space the algorithm takes.)

You always want to see the best and worst case scenario.



SEARCH ALGORITHMS

1 - Linear Search: One number after another. Goes in sequential order.
Other names include: Sequential search, Simple search

EX: Target number 7 
Linear example: Is it 1,2,3,4,5,6,7


2  - Binary Search: Break the task up into pieces, then ask comparison 
question, then repeat the process until you find the answer. 

Downside, needs to be sorted.

Ex: Target number 7
Binary example: Is it 5, "no to low", "is it 8", "to high", "is it 7"


Big O - Theoretical definition of the complexity of an algorithm as a function of the size.
(Notation used to deince complexity)
O(n)- Order of magnitude of complexity, a function of the size